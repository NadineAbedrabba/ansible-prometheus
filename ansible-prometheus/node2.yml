---
- name: Installer Node Exporter sur Oracle Linux 8.6
  hosts: node_exporter
  become: yes
  vars:
    node_exporter_version: "1.8.1"
    archive_name: "node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    extract_dir: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"

  tasks:
    
    - name: Vérifier si node_exporter est déjà installé
      stat:
        path: /usr/local/bin/node_exporter
      register: node_exporter_bin

    - name: Télécharger Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/{{ archive_name }}"
        dest: "/tmp/{{ archive_name }}"
      when: not node_exporter_bin.stat.exists


    - name: Extraire Node Exporter
      unarchive:
        src: "/tmp/{{ archive_name }}"
        dest: /tmp
        remote_src: yes
      when: not node_exporter_bin.stat.exists

    - name: Copier l’exécutable dans /usr/local/bin
      command: mv {{ extract_dir }}/node_exporter /usr/local/bin/node_exporter
      args:
        creates: /usr/local/bin/node_exporter
      when: not node_exporter_bin.stat.exists

    - name: Installer policycoreutils-python-utils (pour semanage)
      become: yes
      command: dnf install -y policycoreutils-python-utils
      when: not node_exporter_bin.stat.exists  
        
        
    - name: Définir le contexte SELinux sur node_exporter
      command: semanage fcontext -a -t bin_t /usr/local/bin/node_exporter
      register: semanage_result
      ignore_errors: yes
      when: not node_exporter_bin.stat.exists
   
    - name: Appliquer le contexte SELinux sur node_exporter
      command: restorecon -v /usr/local/bin/node_exporter
      when: not node_exporter_bin.stat.exists
      

    - name: Rendre l’exécutable exécutable
      file:
        path: /usr/local/bin/node_exporter
        mode: '0755'

    - name: Créer un service systemd pour node_exporter
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/node_exporter
          User=nobody
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
      notify:
        - Reload systemd

    - name: Activer et démarrer Node Exporter
      systemd:
        name: node_exporter
        enabled: yes
        state: started

    - name: Nettoyer les fichiers temporaires
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/{{ archive_name }}"
        - "{{ extract_dir }}"
      when: not node_exporter_bin.stat.exists

  handlers:
    - name: Reload systemd
      systemd:
        daemon_reload: yes
